{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/mock-people.ts","webpack:///./src/app/people/people.component.css","webpack:///./src/app/people/people.component.html","webpack:///./src/app/people/people.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,wBAAwB,OAAO,sC;;;;;;;;;;;;;;;;;;;;;ACAW;AAO1C;IALA;QAME,UAAK,GAAG,kBAAkB,CAAC;IAC7B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AACa;AAa5D;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;ACff,IAAM,MAAM,GAAa;IAC5B;QACI,QAAQ,EAAE,CAAC;QACX,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,+BAA+B;QACxC,GAAG,EAAE,GAAG;QACR,SAAS,EAAE,2DAA2D;QACtE,SAAS,EAAE,UAAU;KACxB;IACD;QACI,QAAQ,EAAE,CAAC;QACX,IAAI,EAAE,gBAAgB;QACtB,OAAO,EAAE,gCAAgC;QACzC,GAAG,EAAE,EAAE;QACP,SAAS,EAAE,8CAA8C;QACzD,SAAS,EAAE,UAAU;KACxB;CACJ,CAAC;;;;;;;;;;;;ACnBF,mB;;;;;;;;;;;ACAA,4aAA4a,0BAA0B,kBAAkB,aAAa,aAAa,yCAAyC,aAAa,mBAAmB,gBAAgB,mBAAmB,YAAY,mBAAmB,kBAAkB,yC;;;;;;;;;;;;;;;;;;;;;;;;;ACA7lB;AACV;AAQxC;IAEE;QADA,WAAM,GAAa,mDAAM,CAAC;IAE1B,CAAC;IAED,kCAAQ,GAAR;IACA,CAAC;IANU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;;;ACT5B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h1>{{title}}</h1> \\n\\n<app-people></app-people>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Catalyst Problem';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PeopleComponent } from './people/people.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PeopleComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Person } from './person';\r\n\r\nexport const PEOPLE: Person[] = [\r\n    {\r\n        personId: 1,\r\n        name: 'Yoda',\r\n        address: 'Jungle Planet, Dagobah System',\r\n        age: 900,\r\n        interests: 'training Luke, defeating Sith, wielding green lightsabers',\r\n        avatarUrl: 'Yoda.png'\r\n    },\r\n    {\r\n        personId: 2,\r\n        name: 'Luke Skywalker',\r\n        address: 'Tatooine, Galaxy far, far away',\r\n        age: 19,\r\n        interests: 'turning Sith good, wielding blue lightsabers',\r\n        avatarUrl: 'luke.jpg'\r\n    }\r\n];\r\n","module.exports = \"\"","module.exports = \"<h2>Search Results</h2>\\n<h4 *ngIf=\\\"people.length <= 0\\\">\\n  No one found with that name.\\n</h4>\\n\\n<table class=\\\"table\\\" *ngIf=\\\"people.length > 0\\\">\\n  <thead>\\n    <tr>\\n      <th>Avatar</th>\\n      <th>Name</th>\\n      <th>Address</th>\\n      <th>Age</th>\\n      <th>Interests</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr  *ngFor=\\\"let person of people\\\">\\n      <td>\\n        <img style=\\\"width:50px;\\\" src=\\\"Content/images/{{person.avatarUrl}}\\\" title=\\\"{{person.name}}'s avatar\\\" />\\n      </td>\\n      <td>{{person.name}}</td>\\n      <td>{{person.address}}</td>\\n      <td>{{person.age}}</td>\\n      <td>{{person.interests}}</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PEOPLE } from '../mock-people';\nimport { Person } from '../Person';\n\n@Component({\n  selector: 'app-people',\n  templateUrl: './people.component.html',\n  styleUrls: ['./people.component.css']\n})\nexport class PeopleComponent implements OnInit {\n  people: Person[] = PEOPLE;\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}