{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Person.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/people/people.component.css","webpack:///./src/app/people/people.component.html","webpack:///./src/app/people/people.component.ts","webpack:///./src/app/person.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;ACXA;AAAA;IAAA;IASA,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;;;;ACVD,mB;;;;;;;;;;;ACAA,wBAAwB,OAAO,wC;;;;;;;;;;;;;;;;;;;;;ACAW;AAO1C;IALA;QAME,UAAK,GAAG,gBAAgB,CAAC;IAC3B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AACX;AAEE;AACa;AACM;AAgBlE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;gBACf,8EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACvBqB;AAK3C;IAHA;QAIE,aAAQ,GAAa,EAAE,CAAC;IAS1B,CAAC;IAPC,4BAAG,GAAH,UAAI,OAAe;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAED,8BAAK,GAAL;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IATU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,cAAc,CAU1B;IAAD,qBAAC;CAAA;AAV0B;;;;;;;;;;;;ACL3B,oEAAoE,iBAAiB,gDAAgD,2BAA2B,KAAK,QAAQ,kBAAkB,KAAK,6BAA6B,qBAAqB,oCAAoC,KAAK,gBAAgB,yBAAyB,6BAA6B,mBAAmB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,KAAK,gBAAgB,gCAAgC,KAAK,mBAAmB,6BAA6B,kBAAkB,mBAAmB,KAAK,gBAAgB,kBAAkB,0BAA0B,KAAK,C;;;;;;;;;;;ACAvqB,8OAA8O,SAAS,kB;;;;;;;;;;;;;;;;;;;;;;;;;ACArM;AACE;AAOpD;IAEE,2BAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEtD,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAGmC,+DAAc;OAFtC,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACR9B,wBAAwB,2BAA2B,GAAG,WAAW,sBAAsB,GAAG,kBAAkB,2BAA2B,GAAG,aAAa,qBAAqB,sBAAsB,GAAG,C;;;;;;;;;;;ACArM,ukBAAukB,YAAY,8oBAA8oB,kBAAkB,yCAAyC,iBAAiB,IAAI,kBAAkB,mBAAmB,gBAAgB,mBAAmB,YAAY,mBAAmB,kBAAkB,weAAwe,0BAA0B,2cAA2c,kDAAkD,4TAA4T,iDAAiD,mSAAmS,gDAAgD,iRAAiR,uCAAuC,ysB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/2G;AACA;AACf;AACwC;AAQ3E;IAOE,yBAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAChD,CAAC;IACD,mCAAS,GAAT;QAAA,iBAcC;QAbC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAGtB,IAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;aAChE,SAAS,CACR,gBAAM,IAAI,YAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAA3B,CAA2B,EACrC,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,EAA7B,CAA6B,EACtC,cAAM,YAAI,CAAC,wBAAwB,EAAE,EAA/B,CAA+B,CACtC,CAAC;QAEF,IAAM,MAAM,GAAG,qDAAQ,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,UAAU,GAAG,CAAC,EAAnB,CAAmB,CAAC,CAAC;IACxE,CAAC;IAED,wCAAc,GAAd,UAAe,MAAgB;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,kDAAwB,GAAxB;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;IACvC,CAAC;IAED,sCAAY,GAAZ,UAAa,MAAc;QACzB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;IAC/B,CAAC;IACD,wCAAc,GAAd;QACE,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;IAClC,CAAC;IACD,oCAAU,GAAV;QAAA,iBAWC;QAVC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC;YAC3H,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClC,IAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC;qBACnE,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAC;YAChD,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,IAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC;qBACpE,SAAS,CAAC,cAAM,YAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,CAAC,CAAC;YAC5C,CAAC;QACH,CAAC;IACH,CAAC;IAED,4CAAkB,GAAlB,UAAmB,QAAgB;QACjC,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACtC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,0CAAgB,GAAhB;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,8CAAM,EAAE,CAAC;IACrC,CAAC;IAED,sCAAY,GAAZ,UAAa,QAAgB;QAA7B,iBAKC;QAJC,IAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC;aAC3D,SAAS,CACR,cAAM,YAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,CACvB,CAAC;IACN,CAAC;IAED,iCAAO,GAAP,UAAQ,GAAW;QACjB,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7C,CAAC;IAED,kCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAjFU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAQmC,6DAAa;OAPrC,eAAe,CAkF3B;IAAD,sBAAC;CAAA;AAlF2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AACoB;AAEzB;AACgB;AAIH;AAKnD;IAEE,uBAAoB,IAAgB,EAAU,cAA8B;QAAxD,SAAI,GAAJ,IAAI,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QACpE,cAAS,GAAG,YAAY,CAAC;IAD+C,CAAC;IAEjF,iCAAS,GAAT,UAAU,WAAmB;QAA7B,iBAOC;QANC,IAAM,GAAG,GAAM,IAAI,CAAC,SAAS,qBAAgB,WAAa,CAAC;QAE3D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,CAAC,CAAC,IAAI,CACtC,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,mBAAiB,WAAW,MAAG,CAAC,EAAzC,CAAyC,CAAC,EACnD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAC9C,CAAC;IACJ,CAAC;IACD,iCAAS,GAAT,UAAU,QAAgB;QAA1B,iBAMC;QALC,IAAM,GAAG,GAAM,IAAI,CAAC,SAAS,SAAI,QAAU,CAAC;QAE5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC,CAAC,IAAI,CACpC,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,6BAA2B,QAAQ,MAAG,CAAC,EAAhD,CAAgD,CAAC,CAC3D,CAAC;IACJ,CAAC;IAED,kCAAU,GAAV,UAAW,MAAc;QAAzB,iBAKC;QAJC,IAAM,GAAG,GAAM,IAAI,CAAC,SAAS,SAAI,MAAM,CAAC,QAAU,CAAC;QAEnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,IAAI,CACpC,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,6BAA2B,MAAM,CAAC,QAAQ,MAAG,CAAC,EAAvD,CAAuD,CAAC,CAAC,CAAC;IACvE,CAAC;IAED,iCAAS,GAAT,UAAU,MAAc;QAAxB,iBAKC;QAJC,IAAM,GAAG,GAAG,KAAG,IAAI,CAAC,SAAW,CAAC;QAEhC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,GAAG,EAAE,MAAM,CAAC,CAAC,IAAI,CAC7C,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,eAAe,CAAC,EAAzB,CAAyB,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,oCAAY,GAAZ,UAAa,QAAgB;QAA7B,iBAIC;QAHC,IAAM,GAAG,GAAM,IAAI,CAAC,SAAS,SAAI,QAAU,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAC/B,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,8BAA4B,QAAQ,MAAG,CAAC,EAAjD,CAAiD,CAAC,CAAC,CAAC;IACjE,CAAC;IAEO,mCAAW,GAAnB,UAAwB,SAAuB,EAAE,MAAU;QAA3D,iBAMC;QANuB,mDAAuB;QAC7C,MAAM,CAAC,UAAC,KAAU;YAChB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,KAAI,CAAC,GAAG,CAAI,SAAS,iBAAY,KAAK,CAAC,OAAS,CAAC,CAAC;YAClD,MAAM,CAAC,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IACO,2BAAG,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAjDU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU,EAA0B,+DAAc;OAFjE,aAAa,CAkDzB;IAAD,oBAAC;CAAA;AAlDyB;;;;;;;;;;;;;;ACb1B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\nexport class Person {\n\n    personId: number;\n    firstName: string;\n    lastName: string;\n    address: string;\n    age: number;\n    interests: string;\n    avatarUrl: string;\n}\n","module.exports = \"\"","module.exports = \"<h1>{{title}}</h1> \\n\\n<app-people></app-people>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'People Manager';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { PeopleComponent } from './people/people.component';\nimport { MessagesComponent } from './messages/messages.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PeopleComponent,\n    MessagesComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n \n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n \n  add(message: string) {\n    this.messages.push(message);\n  }\n \n  clear() {\n    this.messages = [];\n  }\n}\n","module.exports = \"/* MessagesComponent's private CSS styles */\\nh2 {\\n    color: red;\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-weight: lighter;\\n  }\\nbody {\\n    margin: 2em;\\n  }\\nbody, input[text], button {\\n    color: crimson;\\n    font-family: Cambria, Georgia;\\n  }\\nbutton.clear {\\n    font-family: Arial;\\n    background-color: #eee;\\n    border: none;\\n    padding: 5px 10px;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    cursor: hand;\\n  }\\nbutton:hover {\\n    background-color: #cfd8dc;\\n  }\\nbutton:disabled {\\n    background-color: #eee;\\n    color: #aaa;\\n    cursor: auto;\\n  }\\nbutton.clear {\\n    color: #888;\\n    margin-bottom: 12px;\\n  }\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\n    <h2>Log</h2>\\n    <button class=\\\"clear\\\"\\n            (click)=\\\"messageService.clear()\\\">clear</button>\\n    <div *ngFor='let message of messageService.messages'> {{message}} </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"form {\\n    padding-bottom: 20px;\\n}\\n\\n.hand {\\n    cursor: pointer;\\n}\\n\\n.errorBorder {\\n    border:2px solid red;\\n}\\n\\n.avatar {\\n    max-width:50px;\\n    max-height:75px;\\n}\"","module.exports = \"<form>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"searchParam\\\">Search People By Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"searchParam\\\"\\n    [(ngModel)]=\\\"searchParam\\\" name=\\\"searchParam\\\"\\n    #name=\\\"ngModel\\\"\\n    required />\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"getPeople()\\\">\\n    Search\\n  </button> | \\n  <button class=\\\"btn btn-success\\\" (click)=\\\"displayNewPerson()\\\">\\n    Add Person\\n  </button>\\n</form>\\n\\n<h4 *ngIf=\\\"searching\\\">\\n  Currently searching... we've been searching for {{searchTime}} seconds\\n  <span *ngIf=\\\"searchTime > 3\\\"><br />Maybe you should get a drink.  This is taking longer than expected...</span>\\n</h4>\\n\\n<h4 *ngIf=\\\"!searching && people.length <= 0\\\">\\n  No one found with that name.\\n</h4>\\n\\n<table class=\\\"table\\\" *ngIf=\\\"people && people.length > 0\\\">\\n  <thead>\\n    <tr>\\n      <th>Avatar</th>\\n      <th>Name</th>\\n      <th>Address</th>\\n      <th>Age</th>\\n      <th>Interests</th>\\n      <th></th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr  *ngFor=\\\"let person of people\\\">\\n      <td>\\n        <img class=\\\"avatar\\\" [src]=\\\"person.avatarUrl\\\" onError=\\\"this.src='Content/images/default-avatar.png'\\\" title=\\\"{{person.firstName}}'s avatar\\\" />\\n      </td>\\n      <td>{{person.lastName}}, {{person.firstName}}</td>\\n      <td>{{person.address}}</td>\\n      <td>{{person.age}}</td>\\n      <td>{{person.interests}}</td>\\n      <td>\\n        <span class=\\\"glyphicon glyphicon-edit hand\\\" [class.selectedPerson]=\\\"person === selectedPerson\\\" (click)=\\\"selectPerson(person)\\\"></span> | \\n        <span class=\\\"glyphicon glyphicon-remove-sign hand\\\" (click)=\\\"deletePerson(person.personId)\\\"></span>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<div *ngIf=\\\"selectedPerson\\\">\\n<h4>\\n  <span *ngIf=\\\"selectedPerson.personId > 0\\\">Edit</span> \\n  <span *ngIf=\\\"!selectedPerson.personId\\\">Add</span>\\n  {{selectedPerson.firstName}} <span (click)=\\\"deselectPerson()\\\" class=\\\"btn btn-outline-danger btn-sm\\\">(close editor)</span>\\n</h4>\\n\\n    <form #personForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"firstName\\\">First Name</label>\\n          <input type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          id=\\\"firstName\\\"\\n          required minlength=\\\"1\\\" \\n          [(ngModel)]=\\\"selectedPerson.firstName\\\" name=\\\"firstName\\\"\\n          [ngClass]=\\\"{'errorBorder': !isValid(selectedPerson.firstName)}\\\">\\n        </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lastName\\\">Last Name</label>\\n        <input type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"lastName\\\"\\n        required minlength=\\\"1\\\" \\n        [(ngModel)]=\\\"selectedPerson.lastName\\\" name=\\\"lastName\\\"\\n        [ngClass]=\\\"{'errorBorder': !isValid(selectedPerson.lastName)}\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"address\\\">Address</label>\\n        <input type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"address\\\"\\n        required\\n        [(ngModel)]=\\\"selectedPerson.address\\\" name=\\\"address\\\"\\n        [ngClass]=\\\"{'errorBorder': !isValid(selectedPerson.address)}\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"age\\\">Age</label>\\n        <input type=\\\"number\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"age\\\"\\n        required\\n        [(ngModel)]=\\\"selectedPerson.age\\\" name=\\\"age\\\"\\n        [ngClass]=\\\"{'errorBorder': selectedPerson.age <= 0}\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"interests\\\">Interests</label>\\n        <textarea class=\\\"form-control\\\"\\n        cols=\\\"40\\\"\\n        rows=\\\"5\\\"\\n        id=\\\"interests\\\"\\n        [(ngModel)]=\\\"selectedPerson.interests\\\" name=\\\"interests\\\"></textarea>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"avatarUrl\\\">Avatar Url</label>\\n        <input type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"avatarUrl\\\"\\n        required\\n        [(ngModel)]=\\\"selectedPerson.avatarUrl\\\" name=\\\"avatarUrl\\\">\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"editPerson()\\\">Submit Change</button>\\n    </form>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { PersonService } from '../person.service';\nimport { Person } from '../Person';\nimport { Observable, timer, interval, Subject, Subscription  } from 'rxjs';\nimport { takeUntil, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-people',\n  templateUrl: './people.component.html',\n  styleUrls: ['./people.component.css']\n})\nexport class PeopleComponent implements OnInit {\n  people: Person[];\n  selectedPerson: Person;\n  searchParam: string;\n  searching: boolean;\n  searchTime: number;\n  timerSubscription: Subscription;\n  constructor(private personService: PersonService) {\n  }\n  getPeople(): void {\n    this.people = [];\n    this.searching = true;\n\n\n    const subscription = this.personService.getPeople(this.searchParam)\n      .subscribe(\n        people => this.populatePeople(people),\n        error => console.log('Error: ', error),\n        () => this.finishedPopulatingPeople()\n      );\n\n      const source = interval(1000);\n      this.timerSubscription = source.subscribe(t => this.searchTime = t);\n  }\n\n  populatePeople(people: Person[]): void {\n    this.people = people;\n  }\n\n  finishedPopulatingPeople(): void {\n    this.searching = false;\n    this.searchTime = 0;\n    this.timerSubscription.unsubscribe();\n  }\n\n  selectPerson(person: Person): void {\n    this.selectedPerson = person;\n  }\n  deselectPerson(): void {\n    this.selectedPerson = undefined;\n  }\n  editPerson(): void {\n    if (this.selectedPerson.firstName && this.selectedPerson.lastName && this.selectedPerson.address && this.selectedPerson.age){\n      if (!this.selectedPerson.personId) {\n        const subscription = this.personService.addPerson(this.selectedPerson)\n          .subscribe(x => this.finishAddingPerson(x));\n      }\n      else {\n        const subscription = this.personService.editPerson(this.selectedPerson)\n          .subscribe(() => this.deselectPerson());\n      }\n    }\n  }\n\n  finishAddingPerson(personId: number): void {\n    this.selectedPerson.personId = personId;\n    this.people.push(this.selectedPerson);\n    this.deselectPerson();\n  }\n\n  displayNewPerson(): void {\n    this.selectedPerson = new Person();\n  }\n\n  deletePerson(personId: number): void {\n    const subscription = this.personService.deletePerson(personId)\n      .subscribe(\n        () => this.getPeople()\n      );\n  }\n\n  isValid(str: string): boolean {\n    return str === undefined || str.length > 0;\n  }\n\n  ngOnInit() {\n    this.searchParam = '';\n    this.people = [];\n    this.searching = false;\n    this.searchTime = 0;\n    this.getPeople();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { Person } from './Person';\nimport { PEOPLE } from './mock-people';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n  private personUrl = 'api/people';\n  getPeople(searchParam: string): Observable<Person[]> {\n    const url = `${this.personUrl}?searchParam=${searchParam}`;\n\n    return this.http.get<Person[]>(url).pipe(\n      tap(_ => this.log(`searched for '${searchParam}'`)),\n      catchError(this.handleError('getPeople', []))\n    );\n  }\n  getPerson(personId: number): Observable<Person> {\n    const url = `${this.personUrl}/${personId}`;\n\n    return this.http.get<Person>(url).pipe(\n      tap(_ => this.log(`getting person with id '${personId}'`))\n    );\n  }\n\n  editPerson(person: Person): any {\n    const url = `${this.personUrl}/${person.personId}`;\n\n    return this.http.put(url, person).pipe(\n      tap(_ => this.log(`editing person with id '${person.personId}'`)));\n  }\n\n  addPerson(person: Person): Observable<number> {\n    const url = `${this.personUrl}`;\n\n    return this.http.post<number>(url, person).pipe(\n      tap(_ => this.log(`adding person`)));\n  }\n\n  deletePerson(personId: number): any {\n    const url = `${this.personUrl}/${personId}`;\n    return this.http.delete(url).pipe(\n      tap(_ => this.log(`deleting person with id '${personId}'`)));\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n      this.log(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n  private log(message: string) {\n    this.messageService.add(message);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}